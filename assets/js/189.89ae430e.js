(window.webpackJsonp=window.webpackJsonp||[]).push([[189],{462:function(n,s,a){"use strict";a.r(s);var e=a(10),t=Object(e.a)({},function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h2",{attrs:{id:"数据防泄露"}},[n._v("数据防泄露")]),n._v(" "),a("h3",{attrs:{id:"使用加密算法（rsa）"}},[n._v("使用加密算法（RSA）")]),n._v(" "),a("h4",{attrs:{id:"对称加密"}},[n._v("对称加密")]),n._v(" "),a("p",[a("strong",[n._v("对称加密采用了对称密码编码技术，它的特点是文件加密和解密使用相同的密钥加密")])]),n._v(" "),a("h4",{attrs:{id:"非对称加密"}},[n._v("非对称加密")]),n._v(" "),a("p",[a("strong",[n._v("与对称加密算法不同，非对称加密算法需要两个密钥：公开密钥（publickey）和私有密钥（privatekey）。")])]),n._v(" "),a("hr"),n._v(" "),a("p",[n._v("因为非对称加密相对来说 安全性更高一些，这里讲解使用RSA（非对称加密进行加密、签名）")]),n._v(" "),a("h5",{attrs:{id:"加密（对方请求我方服务）"}},[n._v("加密（对方请求我方服务）")]),n._v(" "),a("p",[n._v("使用publicKey进行加密， 使用privateKey 进行解密")]),n._v(" "),a("h5",{attrs:{id:"签名（请求对方服务）"}},[n._v("签名（请求对方服务）")]),n._v(" "),a("p",[n._v("使用privateKey 进行加密， 使用publicKey 进行解密")]),n._v(" "),a("h4",{attrs:{id:"rsautil"}},[n._v("RSAUtil")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('package com.pwc.safe;\n\nimport java.security.KeyPair;\nimport org.apache.tomcat.util.codec.binary.Base64;\nimport javax.crypto.Cipher;\nimport java.io.ByteArrayOutputStream;\nimport java.security.*;\nimport java.security.spec.PKCS8EncodedKeySpec;\nimport java.security.spec.X509EncodedKeySpec;\npublic class RSAUtils {\n\n    /**\n     * RSA最大加密明文大小\n     **/\n    private static final int MAX_ENCRYPT_BLOCK = 117;\n\n    /**\n     * RSA最大解密密文大小\n     **/\n    private static final int MAX_DECRYPT_BLOCK = 128;\n\n\n    public static final String KEY_ALGORITHM = "RSA";\n    public static final String SIGNATURE_ALGORITHM = "MD5withRSA";\n\n    /**\n     * @Title: getKeyPair\n     * @Description: 获取密钥对\n     * @Date: 2020/7/17 14:44\n     * @return: java.security.KeyPair\n     **/\n    public static KeyPair getKeyPair() throws Exception {\n        KeyPairGenerator generator = KeyPairGenerator.getInstance(KEY_ALGORITHM);\n        generator.initialize(1024);\n        return generator.generateKeyPair();\n    }\n\n    /**\n     * @Title: getPrivateKey\n     * @Description: 获取私钥\n     * @param privateKey 私钥字符串\n     * @Date: 2020/7/17 14:45\n     * @return: java.security.PrivateKey\n     **/\n    public static PrivateKey getPrivateKey(String privateKey) throws Exception {\n        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);\n        byte[] decodedKey = Base64.decodeBase64(privateKey.getBytes());\n        PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(decodedKey);\n        return keyFactory.generatePrivate(keySpec);\n    }\n\n    /**\n     * @Title: getPublicKey\n     * @Description: 获取公钥\n     * @param publicKey 公钥字符串\n     * @Date: 2020/7/17 14:47\n     * @return: java.security.PublicKey\n     **/\n    public static PublicKey getPublicKey(String publicKey) throws Exception {\n        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);\n        byte[] decodedKey = Base64.decodeBase64(publicKey.getBytes());\n        X509EncodedKeySpec keySpec = new X509EncodedKeySpec(decodedKey);\n        return keyFactory.generatePublic(keySpec);\n    }\n\n    /**\n     * @Title: encrypt\n     * @Description: RSA 加密\n     * @param data 待加密数据\n     * @param publicKey 公钥\n     * @Date: 2020/7/17 14:47\n     * @return: java.lang.String\n     **/\n    public static String encrypt(String data, PublicKey publicKey) throws Exception {\n        Cipher cipher = Cipher.getInstance(KEY_ALGORITHM);\n        cipher.init(Cipher.ENCRYPT_MODE, publicKey);\n        int inputLen = data.getBytes().length;\n        ByteArrayOutputStream out = new ByteArrayOutputStream();\n        int offset = 0;\n        byte[] cache;\n        int i = 0;\n        // 对数据分段加密\n        while (inputLen - offset > 0) {\n            if (inputLen - offset > MAX_ENCRYPT_BLOCK) {\n                cache = cipher.doFinal(data.getBytes(), offset, MAX_ENCRYPT_BLOCK);\n            } else {\n                cache = cipher.doFinal(data.getBytes(), offset, inputLen - offset);\n            }\n            out.write(cache, 0, cache.length);\n            i++;\n            offset = i * MAX_ENCRYPT_BLOCK;\n        }\n        byte[] encryptedData = out.toByteArray();\n        out.close();\n        // 获取加密内容使用base64进行编码,并以UTF-8为标准转化成字符串\n        // 加密后的字符串\n        return new String(Base64.encodeBase64String(encryptedData));\n    }\n\n    /**\n     * @Title: decrypt\n     * @Description: RSA 解密\n     * @param data 待解密数据\n     * @param privateKey 私钥\n     * @Date: 2020/7/17 14:48\n     * @return: java.lang.String\n     **/\n    public static String decrypt(String data, PrivateKey privateKey) throws Exception {\n        Cipher cipher = Cipher.getInstance(KEY_ALGORITHM);\n        cipher.init(Cipher.DECRYPT_MODE, privateKey);\n        byte[] dataBytes = Base64.decodeBase64(data);\n        int inputLen = dataBytes.length;\n        ByteArrayOutputStream out = new ByteArrayOutputStream();\n        int offset = 0;\n        byte[] cache;\n        int i = 0;\n        // 对数据分段解密\n        while (inputLen - offset > 0) {\n            if (inputLen - offset > MAX_DECRYPT_BLOCK) {\n                cache = cipher.doFinal(dataBytes, offset, MAX_DECRYPT_BLOCK);\n            } else {\n                cache = cipher.doFinal(dataBytes, offset, inputLen - offset);\n            }\n            out.write(cache, 0, cache.length);\n            i++;\n            offset = i * MAX_DECRYPT_BLOCK;\n        }\n        byte[] decryptedData = out.toByteArray();\n        out.close();\n        // 解密后的内容\n        return new String(decryptedData, "UTF-8");\n    }\n\n    /**\n     * @Title: sign\n     * @Description: 签名\n     * @param data 待签名数据\n     * @param privateKey 私钥\n     * @Date: 2020/7/17 14:49\n     * @return: java.lang.String\n     **/\n    public static String sign(String data, PrivateKey privateKey) throws Exception {\n        byte[] keyBytes = privateKey.getEncoded();\n        PKCS8EncodedKeySpec keySpec = new PKCS8EncodedKeySpec(keyBytes);\n        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);\n        PrivateKey key = keyFactory.generatePrivate(keySpec);\n        Signature signature = Signature.getInstance(SIGNATURE_ALGORITHM);\n        signature.initSign(key);\n        signature.update(data.getBytes());\n        return new String(Base64.encodeBase64(signature.sign()));\n    }\n\n    /**\n     * @Title: verify\n     * @Description: 验签\n     * @param srcData 原始字符串\n     * @param publicKey 公钥\n     * @param sign 签名\n     * @Date: 2020/7/17 14:50\n     * @return: boolean\n     **/\n    public static boolean verify(String srcData, PublicKey publicKey, String sign) throws Exception {\n        byte[] keyBytes = publicKey.getEncoded();\n        X509EncodedKeySpec keySpec = new X509EncodedKeySpec(keyBytes);\n        KeyFactory keyFactory = KeyFactory.getInstance(KEY_ALGORITHM);\n        PublicKey key = keyFactory.generatePublic(keySpec);\n        Signature signature = Signature.getInstance(SIGNATURE_ALGORITHM);\n        signature.initVerify(key);\n        signature.update(srcData.getBytes());\n        return signature.verify(Base64.decodeBase64(sign.getBytes()));\n    }\n\n    public static void main(String[] args) {\n        try {\n            // 生成密钥对\n            KeyPair keyPair = getKeyPair();\n            String privateKey = new String(Base64.encodeBase64(keyPair.getPrivate().getEncoded()));\n            String publicKey = new String(Base64.encodeBase64(keyPair.getPublic().getEncoded()));\n            System.out.println("私钥:" + privateKey);\n            System.out.println("公钥:" + publicKey);\n            // RSA加密\n            String data = "待加密的文字内容";\n            String encryptData = encrypt(data, getPublicKey(publicKey));\n            System.out.println("加密后内容:" + encryptData);\n            // RSA解密\n            String decryptData = decrypt(encryptData, getPrivateKey(privateKey));\n            System.out.println("解密后内容:" + decryptData);\n\n            // RSA签名\n            String sign = sign(data, getPrivateKey(privateKey));\n            // RSA验签\n            boolean result = verify(data, getPublicKey(publicKey), sign);\n\n            System.out.print("验签结果:" + result);\n        } catch (Exception e) {\n            e.printStackTrace();\n            System.out.print("加解密异常");\n        }\n    }\n\n}\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br"),a("span",{staticClass:"line-number"},[n._v("68")]),a("br"),a("span",{staticClass:"line-number"},[n._v("69")]),a("br"),a("span",{staticClass:"line-number"},[n._v("70")]),a("br"),a("span",{staticClass:"line-number"},[n._v("71")]),a("br"),a("span",{staticClass:"line-number"},[n._v("72")]),a("br"),a("span",{staticClass:"line-number"},[n._v("73")]),a("br"),a("span",{staticClass:"line-number"},[n._v("74")]),a("br"),a("span",{staticClass:"line-number"},[n._v("75")]),a("br"),a("span",{staticClass:"line-number"},[n._v("76")]),a("br"),a("span",{staticClass:"line-number"},[n._v("77")]),a("br"),a("span",{staticClass:"line-number"},[n._v("78")]),a("br"),a("span",{staticClass:"line-number"},[n._v("79")]),a("br"),a("span",{staticClass:"line-number"},[n._v("80")]),a("br"),a("span",{staticClass:"line-number"},[n._v("81")]),a("br"),a("span",{staticClass:"line-number"},[n._v("82")]),a("br"),a("span",{staticClass:"line-number"},[n._v("83")]),a("br"),a("span",{staticClass:"line-number"},[n._v("84")]),a("br"),a("span",{staticClass:"line-number"},[n._v("85")]),a("br"),a("span",{staticClass:"line-number"},[n._v("86")]),a("br"),a("span",{staticClass:"line-number"},[n._v("87")]),a("br"),a("span",{staticClass:"line-number"},[n._v("88")]),a("br"),a("span",{staticClass:"line-number"},[n._v("89")]),a("br"),a("span",{staticClass:"line-number"},[n._v("90")]),a("br"),a("span",{staticClass:"line-number"},[n._v("91")]),a("br"),a("span",{staticClass:"line-number"},[n._v("92")]),a("br"),a("span",{staticClass:"line-number"},[n._v("93")]),a("br"),a("span",{staticClass:"line-number"},[n._v("94")]),a("br"),a("span",{staticClass:"line-number"},[n._v("95")]),a("br"),a("span",{staticClass:"line-number"},[n._v("96")]),a("br"),a("span",{staticClass:"line-number"},[n._v("97")]),a("br"),a("span",{staticClass:"line-number"},[n._v("98")]),a("br"),a("span",{staticClass:"line-number"},[n._v("99")]),a("br"),a("span",{staticClass:"line-number"},[n._v("100")]),a("br"),a("span",{staticClass:"line-number"},[n._v("101")]),a("br"),a("span",{staticClass:"line-number"},[n._v("102")]),a("br"),a("span",{staticClass:"line-number"},[n._v("103")]),a("br"),a("span",{staticClass:"line-number"},[n._v("104")]),a("br"),a("span",{staticClass:"line-number"},[n._v("105")]),a("br"),a("span",{staticClass:"line-number"},[n._v("106")]),a("br"),a("span",{staticClass:"line-number"},[n._v("107")]),a("br"),a("span",{staticClass:"line-number"},[n._v("108")]),a("br"),a("span",{staticClass:"line-number"},[n._v("109")]),a("br"),a("span",{staticClass:"line-number"},[n._v("110")]),a("br"),a("span",{staticClass:"line-number"},[n._v("111")]),a("br"),a("span",{staticClass:"line-number"},[n._v("112")]),a("br"),a("span",{staticClass:"line-number"},[n._v("113")]),a("br"),a("span",{staticClass:"line-number"},[n._v("114")]),a("br"),a("span",{staticClass:"line-number"},[n._v("115")]),a("br"),a("span",{staticClass:"line-number"},[n._v("116")]),a("br"),a("span",{staticClass:"line-number"},[n._v("117")]),a("br"),a("span",{staticClass:"line-number"},[n._v("118")]),a("br"),a("span",{staticClass:"line-number"},[n._v("119")]),a("br"),a("span",{staticClass:"line-number"},[n._v("120")]),a("br"),a("span",{staticClass:"line-number"},[n._v("121")]),a("br"),a("span",{staticClass:"line-number"},[n._v("122")]),a("br"),a("span",{staticClass:"line-number"},[n._v("123")]),a("br"),a("span",{staticClass:"line-number"},[n._v("124")]),a("br"),a("span",{staticClass:"line-number"},[n._v("125")]),a("br"),a("span",{staticClass:"line-number"},[n._v("126")]),a("br"),a("span",{staticClass:"line-number"},[n._v("127")]),a("br"),a("span",{staticClass:"line-number"},[n._v("128")]),a("br"),a("span",{staticClass:"line-number"},[n._v("129")]),a("br"),a("span",{staticClass:"line-number"},[n._v("130")]),a("br"),a("span",{staticClass:"line-number"},[n._v("131")]),a("br"),a("span",{staticClass:"line-number"},[n._v("132")]),a("br"),a("span",{staticClass:"line-number"},[n._v("133")]),a("br"),a("span",{staticClass:"line-number"},[n._v("134")]),a("br"),a("span",{staticClass:"line-number"},[n._v("135")]),a("br"),a("span",{staticClass:"line-number"},[n._v("136")]),a("br"),a("span",{staticClass:"line-number"},[n._v("137")]),a("br"),a("span",{staticClass:"line-number"},[n._v("138")]),a("br"),a("span",{staticClass:"line-number"},[n._v("139")]),a("br"),a("span",{staticClass:"line-number"},[n._v("140")]),a("br"),a("span",{staticClass:"line-number"},[n._v("141")]),a("br"),a("span",{staticClass:"line-number"},[n._v("142")]),a("br"),a("span",{staticClass:"line-number"},[n._v("143")]),a("br"),a("span",{staticClass:"line-number"},[n._v("144")]),a("br"),a("span",{staticClass:"line-number"},[n._v("145")]),a("br"),a("span",{staticClass:"line-number"},[n._v("146")]),a("br"),a("span",{staticClass:"line-number"},[n._v("147")]),a("br"),a("span",{staticClass:"line-number"},[n._v("148")]),a("br"),a("span",{staticClass:"line-number"},[n._v("149")]),a("br"),a("span",{staticClass:"line-number"},[n._v("150")]),a("br"),a("span",{staticClass:"line-number"},[n._v("151")]),a("br"),a("span",{staticClass:"line-number"},[n._v("152")]),a("br"),a("span",{staticClass:"line-number"},[n._v("153")]),a("br"),a("span",{staticClass:"line-number"},[n._v("154")]),a("br"),a("span",{staticClass:"line-number"},[n._v("155")]),a("br"),a("span",{staticClass:"line-number"},[n._v("156")]),a("br"),a("span",{staticClass:"line-number"},[n._v("157")]),a("br"),a("span",{staticClass:"line-number"},[n._v("158")]),a("br"),a("span",{staticClass:"line-number"},[n._v("159")]),a("br"),a("span",{staticClass:"line-number"},[n._v("160")]),a("br"),a("span",{staticClass:"line-number"},[n._v("161")]),a("br"),a("span",{staticClass:"line-number"},[n._v("162")]),a("br"),a("span",{staticClass:"line-number"},[n._v("163")]),a("br"),a("span",{staticClass:"line-number"},[n._v("164")]),a("br"),a("span",{staticClass:"line-number"},[n._v("165")]),a("br"),a("span",{staticClass:"line-number"},[n._v("166")]),a("br"),a("span",{staticClass:"line-number"},[n._v("167")]),a("br"),a("span",{staticClass:"line-number"},[n._v("168")]),a("br"),a("span",{staticClass:"line-number"},[n._v("169")]),a("br"),a("span",{staticClass:"line-number"},[n._v("170")]),a("br"),a("span",{staticClass:"line-number"},[n._v("171")]),a("br"),a("span",{staticClass:"line-number"},[n._v("172")]),a("br"),a("span",{staticClass:"line-number"},[n._v("173")]),a("br"),a("span",{staticClass:"line-number"},[n._v("174")]),a("br"),a("span",{staticClass:"line-number"},[n._v("175")]),a("br"),a("span",{staticClass:"line-number"},[n._v("176")]),a("br"),a("span",{staticClass:"line-number"},[n._v("177")]),a("br"),a("span",{staticClass:"line-number"},[n._v("178")]),a("br"),a("span",{staticClass:"line-number"},[n._v("179")]),a("br"),a("span",{staticClass:"line-number"},[n._v("180")]),a("br"),a("span",{staticClass:"line-number"},[n._v("181")]),a("br"),a("span",{staticClass:"line-number"},[n._v("182")]),a("br"),a("span",{staticClass:"line-number"},[n._v("183")]),a("br"),a("span",{staticClass:"line-number"},[n._v("184")]),a("br"),a("span",{staticClass:"line-number"},[n._v("185")]),a("br"),a("span",{staticClass:"line-number"},[n._v("186")]),a("br"),a("span",{staticClass:"line-number"},[n._v("187")]),a("br"),a("span",{staticClass:"line-number"},[n._v("188")]),a("br"),a("span",{staticClass:"line-number"},[n._v("189")]),a("br"),a("span",{staticClass:"line-number"},[n._v("190")]),a("br"),a("span",{staticClass:"line-number"},[n._v("191")]),a("br"),a("span",{staticClass:"line-number"},[n._v("192")]),a("br"),a("span",{staticClass:"line-number"},[n._v("193")]),a("br"),a("span",{staticClass:"line-number"},[n._v("194")]),a("br"),a("span",{staticClass:"line-number"},[n._v("195")]),a("br"),a("span",{staticClass:"line-number"},[n._v("196")]),a("br"),a("span",{staticClass:"line-number"},[n._v("197")]),a("br"),a("span",{staticClass:"line-number"},[n._v("198")]),a("br"),a("span",{staticClass:"line-number"},[n._v("199")]),a("br"),a("span",{staticClass:"line-number"},[n._v("200")]),a("br"),a("span",{staticClass:"line-number"},[n._v("201")]),a("br")])]),a("h2",{attrs:{id:"数据防篡改"}},[n._v("数据防篡改")]),n._v(" "),a("h3",{attrs:{id:"使用base64防篡改"}},[n._v("使用Base64防篡改")]),n._v(" "),a("h4",{attrs:{id:"原因"}},[n._v("原因")]),n._v(" "),a("ul",[a("li",[n._v("Base64是不可逆的编码")]),n._v(" "),a("li",[n._v("同一个字符串进行N次编码（hash） 都会生成同一个编码")])]),n._v(" "),a("h4",{attrs:{id:"原理"}},[n._v("原理")]),n._v(" "),a("p",[n._v("Base64 是将字符串 转换成 二进制 （001010101这种的），然后按照每6个一组进行分组，然后在将 这每组的二进制转换成10进制 会生成 0 -64 的数字，")]),n._v(" "),a("p",[n._v("这64个数字会根据ASCII 中数字代表的字母进行获取而生成的一种国际上都会认识的一个字符串")]),n._v(" "),a("h3",{attrs:{id:"应用场景"}},[n._v("应用场景")]),n._v(" "),a("p",[n._v("下订单的过程中， 如果在付款的时候，用户需要付款5000元，但是被黑客抓包篡改了金额，变成1元，那么将会损失4999元大洋，是不是很惨。")]),n._v(" "),a("h4",{attrs:{id:"解决"}},[n._v("解决")]),n._v(" "),a("ul",[a("li",[n._v("在订单提交的请求中双方协商 订单生成字符串拼接规则, 例如：data1 =  Base64加密（用户名-金额-日期） , md5Str = xxxxxxxxxxxxxxxxxxxx;")]),n._v(" "),a("li",[n._v("如果字符串拼接规则 和 md5串都被抓包了怎么办？ 那么可以使用邮件发送一个salt(盐)， 拼接在data1后面，例如：  Base64加密（用户名-金额-日期-盐）")])]),n._v(" "),a("blockquote",[a("p",[n._v("这个盐可以约定 是根据时间动态生成的 例如： new Date().getHour();")])]),n._v(" "),a("h2",{attrs:{id:"数据防窃取"}},[n._v("数据防窃取")]),n._v(" "),a("p",[n._v("所谓的数据防窃取就是接口防止被恶意调用， 使用token进行解决，每次请求接口的时候，都需要带着token进行请求")]),n._v(" "),a("p",[n._v("这个token可以有多种方案")]),n._v(" "),a("ul",[a("li",[a("p",[n._v("在第一次请求之前， 需要向服务端申请获取token，服务端将token保存在redis中，并设置expire超时时间（比如30分钟）。如果下次请求")]),n._v(" "),a("p",[n._v("携带的token，没有在redis中查询到，那么需要返回权限过期信息。")])]),n._v(" "),a("li",[a("p",[n._v("使用Oauth2 框架集成")])]),n._v(" "),a("li",[a("p",[n._v("使用自定义的token生成规则，其中双方要协商token生成规则， 使用下方规则生成。 tag  和 key需要双方制定，切记不能泄露 tag key 和 生成方式")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("urlencode(base64({\n    tag:标识符,\n    expires:有效期时间戳(例如：time()+3600)\n    token:md5(tag+key+expires)MD5校验\n}))\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br")])])])]),n._v(" "),a("h5",{attrs:{id:"authinfohelper-工具类"}},[n._v("AuthInfoHelper 工具类")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("package com.sprucetec.live.common.util;\n\n/**\n * @ClassName AuthInfoHelper\n * @Description:\n * @Author Kenny\n * @Date 2020/7/7\n **/\n\nimport com.alibaba.fastjson.JSON;\nimport com.sprucetec.live.common.dto.baores.AuthInfo;\nimport org.springframework.util.DigestUtils;\n\nimport java.io.UnsupportedEncodingException;\nimport java.net.URLDecoder;\nimport java.net.URLEncoder;\nimport java.nio.charset.StandardCharsets;\nimport java.util.Base64;\nimport java.util.Date;\n\npublic class AuthInfoHelper {\n\n    /*\n    urlencode(base64({\n        tag:标识符,\n        expires:有效期时间戳(例如：time()+3600)\n        token:md5(tag+key+expires)MD5校验\n    }))\n     */\n\n    public static AuthInfo getAuthInfo(String tag, String key, int expiration) {\n        AuthInfo authInfo = new AuthInfo();\n        authInfo.setTag(tag);\n        authInfo.setExpires(getAuthExpiration(expiration));\n        authInfo.setToken(getToken(tag, key, authInfo.getExpires()));\n        return authInfo;\n    }\n\n    public static String getAuthInfoText(String tag, String key, int expiration) throws UnsupportedEncodingException {\n        AuthInfo authInfo = getAuthInfo(tag, key, expiration);\n        return getAuthInfoText(authInfo);\n    }\n\n    public static String getAuthInfoBase64(String tag, String key, int expiration) {\n        AuthInfo authInfo = getAuthInfo(tag, key, expiration);\n        return getAuthInfoBase64(authInfo);\n    }\n\n    public static String getAuthInfoBase64(AuthInfo authInfo) {\n        String jsonText = JSON.toJSONString(authInfo);\n        return getBase64Text(jsonText);\n    }\n\n    public static String getAuthInfoText(AuthInfo authInfo) throws UnsupportedEncodingException {\n        String base64Text = getAuthInfoBase64(authInfo);\n        return getUrlEncodedText(base64Text);\n    }\n\n    public static boolean checkAuthInfo(AuthInfo authInfo, String key) {\n        long now = getUnixTime();\n        if (authInfo.getExpires() >= now) {\n\n            String token = getToken(authInfo.getTag(), key, authInfo.getExpires());\n\n            return authInfo.getToken().equals(token);\n        }\n        return false;\n    }\n\n    public static boolean checkAuthInfoText(String authInfoText, String key) throws UnsupportedEncodingException {\n        return checkAuthInfo(parseAuthInfoText(authInfoText), key);\n    }\n\n    public static boolean checkAuthInfoBase64(String authInfoBase64, String key) {\n        return checkAuthInfo(parseAuthInfoBase64(authInfoBase64), key);\n    }\n\n    public static AuthInfo parseAuthInfoBase64(String authInfoBase64) {\n        String jsonText = parseBase64Text(authInfoBase64);\n\n        return AuthInfo.fromJsonText(jsonText, AuthInfo.class);\n    }\n\n    public static AuthInfo parseAuthInfoText(String authInfoText) throws UnsupportedEncodingException {\n        String base64Text = parseUrlEncodedText(authInfoText);\n        return parseAuthInfoBase64(base64Text);\n    }\n\n    public static String getToken(String tag, String key, long expiration) {\n        String str = tag + key + expiration;\n        return DigestUtils.md5DigestAsHex(str.getBytes(StandardCharsets.UTF_8));\n    }\n\n    public static long getAuthExpiration(int expiration) {\n        return getUnixTime() + expiration;\n    }\n\n    public static long getUnixTime() {\n        return new Date().getTime()/1000;\n    }\n\n    public static String getMd5Text(String text) {\n        return DigestUtils.md5DigestAsHex(text.getBytes(StandardCharsets.UTF_8));\n    }\n\n    private static Base64.Encoder base64Encoder = Base64.getEncoder();\n    public static String getBase64Text(String text) {\n        return base64Encoder.encodeToString(text.getBytes(StandardCharsets.UTF_8));\n    }\n\n    private static Base64.Decoder base64Decoder = Base64.getDecoder();\n    public static String parseBase64Text(String base64Text) {\n        byte[] bytes = base64Decoder.decode(base64Text.getBytes(StandardCharsets.UTF_8));\n        return new String(bytes, StandardCharsets.UTF_8);\n    }\n\n    public static String getUrlEncodedText(String text) throws UnsupportedEncodingException {\n        return URLEncoder.encode(text, StandardCharsets.UTF_8.name());\n    }\n\n    public static String parseUrlEncodedText(String urlEncodedText) throws UnsupportedEncodingException {\n        return URLDecoder.decode(urlEncodedText, StandardCharsets.UTF_8.name());\n    }\n\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br"),a("span",{staticClass:"line-number"},[n._v("59")]),a("br"),a("span",{staticClass:"line-number"},[n._v("60")]),a("br"),a("span",{staticClass:"line-number"},[n._v("61")]),a("br"),a("span",{staticClass:"line-number"},[n._v("62")]),a("br"),a("span",{staticClass:"line-number"},[n._v("63")]),a("br"),a("span",{staticClass:"line-number"},[n._v("64")]),a("br"),a("span",{staticClass:"line-number"},[n._v("65")]),a("br"),a("span",{staticClass:"line-number"},[n._v("66")]),a("br"),a("span",{staticClass:"line-number"},[n._v("67")]),a("br"),a("span",{staticClass:"line-number"},[n._v("68")]),a("br"),a("span",{staticClass:"line-number"},[n._v("69")]),a("br"),a("span",{staticClass:"line-number"},[n._v("70")]),a("br"),a("span",{staticClass:"line-number"},[n._v("71")]),a("br"),a("span",{staticClass:"line-number"},[n._v("72")]),a("br"),a("span",{staticClass:"line-number"},[n._v("73")]),a("br"),a("span",{staticClass:"line-number"},[n._v("74")]),a("br"),a("span",{staticClass:"line-number"},[n._v("75")]),a("br"),a("span",{staticClass:"line-number"},[n._v("76")]),a("br"),a("span",{staticClass:"line-number"},[n._v("77")]),a("br"),a("span",{staticClass:"line-number"},[n._v("78")]),a("br"),a("span",{staticClass:"line-number"},[n._v("79")]),a("br"),a("span",{staticClass:"line-number"},[n._v("80")]),a("br"),a("span",{staticClass:"line-number"},[n._v("81")]),a("br"),a("span",{staticClass:"line-number"},[n._v("82")]),a("br"),a("span",{staticClass:"line-number"},[n._v("83")]),a("br"),a("span",{staticClass:"line-number"},[n._v("84")]),a("br"),a("span",{staticClass:"line-number"},[n._v("85")]),a("br"),a("span",{staticClass:"line-number"},[n._v("86")]),a("br"),a("span",{staticClass:"line-number"},[n._v("87")]),a("br"),a("span",{staticClass:"line-number"},[n._v("88")]),a("br"),a("span",{staticClass:"line-number"},[n._v("89")]),a("br"),a("span",{staticClass:"line-number"},[n._v("90")]),a("br"),a("span",{staticClass:"line-number"},[n._v("91")]),a("br"),a("span",{staticClass:"line-number"},[n._v("92")]),a("br"),a("span",{staticClass:"line-number"},[n._v("93")]),a("br"),a("span",{staticClass:"line-number"},[n._v("94")]),a("br"),a("span",{staticClass:"line-number"},[n._v("95")]),a("br"),a("span",{staticClass:"line-number"},[n._v("96")]),a("br"),a("span",{staticClass:"line-number"},[n._v("97")]),a("br"),a("span",{staticClass:"line-number"},[n._v("98")]),a("br"),a("span",{staticClass:"line-number"},[n._v("99")]),a("br"),a("span",{staticClass:"line-number"},[n._v("100")]),a("br"),a("span",{staticClass:"line-number"},[n._v("101")]),a("br"),a("span",{staticClass:"line-number"},[n._v("102")]),a("br"),a("span",{staticClass:"line-number"},[n._v("103")]),a("br"),a("span",{staticClass:"line-number"},[n._v("104")]),a("br"),a("span",{staticClass:"line-number"},[n._v("105")]),a("br"),a("span",{staticClass:"line-number"},[n._v("106")]),a("br"),a("span",{staticClass:"line-number"},[n._v("107")]),a("br"),a("span",{staticClass:"line-number"},[n._v("108")]),a("br"),a("span",{staticClass:"line-number"},[n._v("109")]),a("br"),a("span",{staticClass:"line-number"},[n._v("110")]),a("br"),a("span",{staticClass:"line-number"},[n._v("111")]),a("br"),a("span",{staticClass:"line-number"},[n._v("112")]),a("br"),a("span",{staticClass:"line-number"},[n._v("113")]),a("br"),a("span",{staticClass:"line-number"},[n._v("114")]),a("br"),a("span",{staticClass:"line-number"},[n._v("115")]),a("br"),a("span",{staticClass:"line-number"},[n._v("116")]),a("br"),a("span",{staticClass:"line-number"},[n._v("117")]),a("br"),a("span",{staticClass:"line-number"},[n._v("118")]),a("br"),a("span",{staticClass:"line-number"},[n._v("119")]),a("br"),a("span",{staticClass:"line-number"},[n._v("120")]),a("br"),a("span",{staticClass:"line-number"},[n._v("121")]),a("br"),a("span",{staticClass:"line-number"},[n._v("122")]),a("br"),a("span",{staticClass:"line-number"},[n._v("123")]),a("br"),a("span",{staticClass:"line-number"},[n._v("124")]),a("br"),a("span",{staticClass:"line-number"},[n._v("125")]),a("br")])]),a("h5",{attrs:{id:"使用工具类"}},[n._v("使用工具类")]),n._v(" "),a("ul",[a("li",[n._v("生成token")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(" AuthInfoHelper.getAuthInfoBase64(baoTag, baoKey, baoExpires); // 生成自定义token，每次请求需要携带该生成的token进行请求\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])]),a("ul",[a("li",[a("p",[n._v("检验token是否合法")]),n._v(" "),a("div",{staticClass:"language-checkAuthInfo line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("AuthInfoHelper.checkAuthInfo(authInfo, key); // authInfo是上面生成的token，key是双方协商定义的系统key\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br")])])])]),n._v(" "),a("h5",{attrs:{id:"补充"}},[n._v("补充")]),n._v(" "),a("blockquote",[a("p",[n._v("上方AuthInfoHelper 的辅助类")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("package com.pwc.safe;\n\n/**\n * @ClassName AuthInfo\n * @Description:\n * @Author Kenny\n * @Date 2020/7/7\n **/\n\nimport com.alibaba.fastjson.JSONObject;\nimport com.alibaba.fastjson.annotation.JSONField;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\npublic class AuthInfo implements Serializable {\n    private static final long serialVersionUID = 2969080097480877691L;\n    private String tag;\n\n    private long expires;\n\n    private String token;\n\n    public String getTag() {\n        return tag;\n    }\n\n    public void setTag(String tag) {\n        this.tag = tag;\n    }\n\n    public long getExpires() {\n        return expires;\n    }\n\n    @JSONField(serialize = false)\n    public Date getExpiresDate() {\n        return new Date(getExpires()*1000);\n    }\n\n    public void setExpires(long expires) {\n        this.expires = expires;\n    }\n\n    public String getToken() {\n        return token;\n    }\n\n    public void setToken(String token) {\n        this.token = token;\n    }\n\n\n    public static AuthInfo fromJsonText(String json, Class<AuthInfo> clz){\n        return JSONObject.parseObject(json, clz);\n    }\n\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br"),a("span",{staticClass:"line-number"},[n._v("40")]),a("br"),a("span",{staticClass:"line-number"},[n._v("41")]),a("br"),a("span",{staticClass:"line-number"},[n._v("42")]),a("br"),a("span",{staticClass:"line-number"},[n._v("43")]),a("br"),a("span",{staticClass:"line-number"},[n._v("44")]),a("br"),a("span",{staticClass:"line-number"},[n._v("45")]),a("br"),a("span",{staticClass:"line-number"},[n._v("46")]),a("br"),a("span",{staticClass:"line-number"},[n._v("47")]),a("br"),a("span",{staticClass:"line-number"},[n._v("48")]),a("br"),a("span",{staticClass:"line-number"},[n._v("49")]),a("br"),a("span",{staticClass:"line-number"},[n._v("50")]),a("br"),a("span",{staticClass:"line-number"},[n._v("51")]),a("br"),a("span",{staticClass:"line-number"},[n._v("52")]),a("br"),a("span",{staticClass:"line-number"},[n._v("53")]),a("br"),a("span",{staticClass:"line-number"},[n._v("54")]),a("br"),a("span",{staticClass:"line-number"},[n._v("55")]),a("br"),a("span",{staticClass:"line-number"},[n._v("56")]),a("br"),a("span",{staticClass:"line-number"},[n._v("57")]),a("br"),a("span",{staticClass:"line-number"},[n._v("58")]),a("br")])])])},[],!1,null,null,null);s.default=t.exports}}]);