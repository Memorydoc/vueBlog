(window.webpackJsonp=window.webpackJsonp||[]).push([[101],{374:function(s,a,e){"use strict";e.r(a);var n=e(10),t=Object(n.a)({},function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"使用-docker-镜像"}},[s._v("使用 Docker 镜像")]),s._v(" "),e("p",[s._v("在之前的介绍中，我们知道镜像是 Docker 的三大组件之一。")]),s._v(" "),e("p",[s._v("Docker 运行容器前需要本地存在对应的镜像，如果本地不存在该镜像，Docker 会从镜像仓库下载该镜像。")]),s._v(" "),e("p",[s._v("本章将介绍更多关于镜像的内容，包括：")]),s._v(" "),e("ul",[e("li",[s._v("从仓库获取镜像；")]),s._v(" "),e("li",[s._v("管理本地主机上的镜像；")]),s._v(" "),e("li",[s._v("介绍镜像实现的基本原理。")])]),s._v(" "),e("h2",{attrs:{id:"docker-获取镜像"}},[s._v("Docker 获取镜像")]),s._v(" "),e("p",[s._v("之前提到过，Docker Hub 上有大量的高质量的镜像可以用，这里我们就说一下怎么获取这些镜像。")]),s._v(" "),e("p",[s._v("从 Docker 镜像仓库获取镜像的命令是 docker pull。其命令格式为：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("docker pull "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("选项"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("Docker Registry 地址"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":端口号"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("/"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("仓库名"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":标签"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("具体的选项可以通过 docker pull --help 命令看到，这里我们说一下镜像名称的格式。")]),s._v(" "),e("ul",[e("li",[s._v("Docker 镜像仓库地址：地址的格式一般是 <域名/IP>[:端口号]。默认地址是 Docker Hub。")]),s._v(" "),e("li",[s._v("仓库名：如之前所说，这里的仓库名是两段式名称，即 <用户名>/<软件名>。对于 Docker Hub，如果不给出用户名，则默认为 library，也就是官方镜像。\n比如：")])]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ docker pull ubuntu:16.04\n"),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("16.04")]),s._v(": Pulling from library/ubuntu\nbf5d46315322: Pull complete\n9f13e0ac480c: Pull complete\ne8988b5b3097: Pull complete\n40af181810e7: Pull complete\ne6f7c7e5c03e: Pull complete\nDigest: sha256:147913621d9cdea08853f6ba9116c2e27a3ceffecf3b492983ae97c3d643fbbe\nStatus: Downloaded newer image "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" ubuntu:16.04\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[s._v("上面的命令中没有给出 Docker 镜像仓库地址，因此将会从 Docker Hub 获取镜像。而镜像名称是 "),e("code",[s._v("ubuntu:16.04")]),s._v("，因此将会获取官方镜像 "),e("code",[s._v("library/ubuntu")]),s._v(" 仓库中标签为 "),e("code",[s._v("16.04")]),s._v(" 的镜像。")]),s._v(" "),e("p",[s._v("从下载过程中可以看到我们之前提及的分层存储的概念，镜像是由多层存储所构成。下载也是一层层的去下载，并非单一文件。下载过程中给出了每一层的 ID 的前 12 位。并且下载结束后，给出该镜像完整的 sha256 的摘要，以确保下载一致性。")]),s._v(" "),e("p",[s._v("在使用上面命令的时候，你可能会发现，你所看到的层 ID 以及 "),e("code",[s._v("sha256")]),s._v(" 的摘要和这里的不一样。这是因为官方镜像是一直在维护的，有任何新的 bug，或者版本更新，都会进行修复再以原来的标签发布，这样可以确保任何使用这个标签的用户可以获得更安全、更稳定的镜像。")]),s._v(" "),e("p",[s._v("如果从 Docker Hub 下载镜像非常缓慢，可以参照 "),e("strong",[s._v("镜像加速器")]),s._v(" 一节配置加速器。")]),s._v(" "),e("h2",{attrs:{id:"运行"}},[s._v("运行")]),s._v(" "),e("p",[s._v("有了镜像后，我们就能够以这个镜像为基础启动并运行一个容器。以上面的 ubuntu:16.04 为例，如果我们打算启动里面的 bash 并且进行交互式操作的话，可以执行下面的命令。")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ docker run -it --rm "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\nubuntu:16.04 "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("\n\nroot@e7009c6ce357:/"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat /etc/os-release")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("NAME")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Ubuntu"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("VERSION")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"16.04.4 LTS, Trusty Tahr"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ID")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("ubuntu\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ID_LIKE")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("debian\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PRETTY_NAME")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Ubuntu 16.04.4 LTS"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("VERSION_ID")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"16.04"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("HOME_URL")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://www.ubuntu.com/"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SUPPORT_URL")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://help.ubuntu.com/"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("BUG_REPORT_URL")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://bugs.launchpad.net/ubuntu/"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("code",[s._v("docker run")]),s._v(" 就是运行容器的命令，我们这里简要的说明一下上面用到的参数。")]),s._v(" "),e("p",[e("code",[s._v("-it")]),s._v("：这是两个参数，一个是 -i：交互式操作，一个是 -t 终端。我们这里打算进入 bash 执行一些命令并查看返回结果，因此我们需要交互式终端。\n"),e("code",[s._v("--rm")]),s._v("：这个参数是说容器退出后随之将其删除。默认情况下，为了排障需求，退出的容器并不会立即删除，除非手动 docker rm。我们这里只是随便执行个命令，看看结果，不需要排障和保留结果，因此使用 --rm 可以避免浪费空间。\n"),e("code",[s._v("ubuntu:16.04")]),s._v("：这是指用 "),e("code",[s._v("ubuntu:16.04")]),s._v(" 镜像为基础来启动容器。\n"),e("code",[s._v("bash")]),s._v("：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 "),e("code",[s._v("bash")]),s._v("。\n进入容器后，我们可以在 Shell 下操作，执行任何所需的命令。这里，我们执行了 "),e("code",[s._v("cat /etc/os-release")]),s._v("，这是 Linux 常用的查看当前系统版本的命令，从返回的结果可以看到容器内是 "),e("code",[s._v("Ubuntu 16.04.4 LTS ")]),s._v("系统。")]),s._v(" "),e("p",[s._v("最后我们通过 "),e("code",[s._v("exit")]),s._v(" 退出了这个容器。")]),s._v(" "),e("h2",{attrs:{id:"docker-列出镜像"}},[s._v("Docker 列出镜像")]),s._v(" "),e("p",[s._v("要想列出已经下载下来的镜像，可以使用 docker image ls 命令。")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ docker image "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\nREPOSITORY           TAG                 IMAGE ID            CREATED             SIZE\nredis                latest              5f515359c7f8        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" days ago          "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("183")]),s._v(" MB\nnginx                latest              05a60462f8ba        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" days ago          "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("181")]),s._v(" MB\nmongo                "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.2")]),s._v("                 fe9198c04d62        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" days ago          "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("342")]),s._v(" MB\n"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("               "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("              00285df0df87        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" days ago          "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("342")]),s._v(" MB\nubuntu               "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("16.04")]),s._v("               f753707788c5        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" weeks ago         "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127")]),s._v(" MB\nubuntu               latest              f753707788c5        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" weeks ago         "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127")]),s._v(" MB\nubuntu               "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("14.04")]),s._v("               1e0c3dd64ccd        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" weeks ago         "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("188")]),s._v(" MB\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[s._v("列表包含了 仓库名、标签、镜像 ID、创建时间 以及 所占用的空间。")]),s._v(" "),e("p",[s._v("其中仓库名、标签在之前的基础概念章节已经介绍过了。镜像 ID 则是镜像的唯一标识，一个镜像可以对应多个标签。因此，在上面的例子中，我们可以看到 ubuntu:16.04 和 ubuntu:latest 拥有相同的 ID，因为它们对应的是同一个镜像。")]),s._v(" "),e("h3",{attrs:{id:"镜像体积"}},[s._v("镜像体积")]),s._v(" "),e("p",[s._v("如果仔细观察，会注意到，这里标识的所占用空间和在 Docker Hub 上看到的镜像大小不同。比如，"),e("code",[s._v("ubuntu:16.04")]),s._v(" 镜像大小，在这里是 127 MB，但是在 Docker Hub 显示的却是 50 MB。这是因为 Docker Hub 中显示的体积是压缩后的体积。在镜像下载和上传过程中镜像是保持着压缩状态的，因此 Docker Hub 所显示的大小是网络传输中更关心的流量大小。而 docker image ls 显示的是镜像下载到本地后，展开的大小，准确说，是展开后的各层所占空间的总和，因为镜像到本地后，查看空间的时候，更关心的是本地磁盘空间占用的大小。")]),s._v(" "),e("p",[s._v("另外一个需要注意的问题是，"),e("code",[s._v("docker image ls")]),s._v(" 列表中的镜像体积总和并非是所有镜像实际硬盘消耗。由于 Docker 镜像是多层存储结构，并且可以继承、复用，因此不同镜像可能会因为使用相同的基础镜像，从而拥有共同的层。由于 Docker 使用 Union FS，相同的层只需要保存一份即可，因此实际镜像硬盘占用空间很可能要比这个列表镜像大小的总和要小的多。")]),s._v(" "),e("p",[s._v("你可以通过以下命令来便捷的查看镜像、容器、数据卷所占用的空间。")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ docker system "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("df")]),s._v("\nTYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE\nImages              "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v("                  "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".992GB             "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(".992GB "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("%"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nContainers          "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("                   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("62")]),s._v(".82MB             "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("62")]),s._v(".82MB "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("%"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nLocal Volumes       "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("                   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("                   "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("652")]),s._v(".2MB             "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("652")]),s._v(".2MB "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("%"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nBuild Cache                                                 0B                  0B\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h3",{attrs:{id:"虚悬镜像"}},[s._v("虚悬镜像")]),s._v(" "),e("p",[s._v("上面的镜像列表中，还可以看到一个特殊的镜像，这个镜像既没有仓库名，也没有标签，均为 "),e("code",[e("none")],1),s._v("。：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("               "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("              00285df0df87        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" days ago          "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("342")]),s._v(" MB\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("这个镜像原本是有镜像名和标签的，原来为 "),e("code",[s._v("mongo:3.2")]),s._v("，随着官方镜像维护，发布了新版本后，重新 "),e("code",[s._v("docker pull mongo:3.2 ")]),s._v("时， "),e("code",[s._v("mongo:3.2 ")]),s._v(" 这个镜像名被转移到了新下载的镜像身上，而旧的镜像上的这个名称则被取消，从而成为了 "),e("code",[e("none")],1),s._v("。除了"),e("code",[s._v(" docker pull")]),s._v(" 可能导致这种情况，docker build 也同样可以导致这种现象。由于新旧镜像同名，旧镜像名称被取消，从而出现仓库名、标签均为 "),e("none",[s._v(" 的镜像。这类无标签镜像也被称为 虚悬镜像("),e("code",[s._v("dangling image")]),s._v(") ，可以用下面的命令专门显示这类镜像：")])],1),s._v(" "),e("p",[s._v("$ docker image ls -f dangling=true\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\n"),e("none",[e("none",[s._v("              00285df0df87        5 days ago          342 MB\n一般来说，虚悬镜像已经失去了存在的价值，是可以随意删除的，可以用下面的命令删除。")])],1)],1),s._v(" "),e("p",[s._v("$ docker image prune")]),s._v(" "),e("h3",{attrs:{id:"中间层镜像"}},[s._v("中间层镜像")]),s._v(" "),e("p",[s._v("为了加速镜像构建、重复利用资源，Docker 会利用 中间层镜像。所以在使用一段时间后，可能会看到一些依赖的中间层镜像。默认的 "),e("code",[s._v("docker image ls")]),s._v(" 列表中只会显示顶层镜像，如果希望显示包括中间层镜像在内的所有镜像的话，需要加 "),e("code",[s._v("-a ")]),s._v("参数。")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ docker image "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -a\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("这样会看到很多无标签的镜像，与之前的虚悬镜像不同，这些无标签的镜像很多都是中间层镜像，是其它镜像所依赖的镜像。这些无标签镜像不应该删除，否则会导致上层镜像因为依赖丢失而出错。实际上，这些镜像也没必要删除，因为之前说过，相同的层只会存一遍，而这些镜像是别的镜像的依赖，因此并不会因为它们被列出来而多存了一份，无论如何你也会需要它们。只要删除那些依赖它们的镜像后，这些依赖的中间层镜像也会被连带删除。")]),s._v(" "),e("h3",{attrs:{id:"列出部分镜像"}},[s._v("列出部分镜像")]),s._v(" "),e("p",[s._v("不加任何参数的情况下，"),e("code",[s._v("docker image ls")]),s._v(" 会列出所有顶级镜像，但是有时候我们只希望列出部分镜像。"),e("code",[s._v("docker image ls")]),s._v(" 有好几个参数可以帮助做到这个事情。")]),s._v(" "),e("p",[s._v("根据仓库名列出镜像")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ docker image "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" ubuntu\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nubuntu              "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("16.04")]),s._v("               f753707788c5        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" weeks ago         "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127")]),s._v(" MB\nubuntu              latest              f753707788c5        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" weeks ago         "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127")]),s._v(" MB\nubuntu              "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("14.04")]),s._v("               1e0c3dd64ccd        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" weeks ago         "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("188")]),s._v(" MB\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("列出特定的某个镜像，也就是说指定仓库名和标签")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ docker image "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" ubuntu:16.04\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nubuntu              "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("16.04")]),s._v("               f753707788c5        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" weeks ago         "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("127")]),s._v(" MB\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("除此以外，"),e("code",[s._v("docker image ls")]),s._v(" 还支持强大的过滤器参数 --filter，或者简写 -f。之前我们已经看到了使用过滤器来列出虚悬镜像的用法，它还有更多的用法。比如，我们希望看到在 mongo:3.2 之后建立的镜像，可以用下面的命令：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ docker image "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -f "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("since")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mongo:3.2\nREPOSITORY          TAG                 IMAGE ID            CREATED             SIZE\nredis               latest              5f515359c7f8        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" days ago          "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("183")]),s._v(" MB\nnginx               latest              05a60462f8ba        "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(" days ago          "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("181")]),s._v(" MB\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("想查看某个位置之前的镜像也可以，只需要把 "),e("code",[s._v("since")]),s._v(" 换成 "),e("code",[s._v("before")]),s._v(" 即可。")]),s._v(" "),e("p",[s._v("此外，如果镜像构建时，定义了 "),e("code",[s._v("LABEL")]),s._v("，还可以通过 "),e("code",[s._v("LABEL")]),s._v(" 来过滤。")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ docker image "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -f "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("label")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("com.example.version"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.1")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("...")]),s._v(" "),e("h3",{attrs:{id:"以特定格式显示"}},[s._v("以特定格式显示")]),s._v(" "),e("p",[s._v("默认情况下，"),e("code",[s._v("docker image ls")]),s._v(" 会输出一个完整的表格，但是我们并非所有时候都会需要这些内容。比如，刚才删除虚悬镜像的时候，我们需要利用 "),e("code",[s._v("docker image ls")]),s._v(" 把所有的虚悬镜像的 ID 列出来，然后才可以交给 "),e("code",[s._v(" docker image rm ")]),s._v("命令作为参数来删除指定的这些镜像，这个时候就用到了 "),e("code",[s._v("-q")]),s._v(" 参数。")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ docker image "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" -q\n5f515359c7f8\n05a60462f8ba\nfe9198c04d62\n00285df0df87\nf753707788c5\nf753707788c5\n1e0c3dd64ccd\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("code",[s._v("--filter")]),s._v(" 配合"),e("code",[s._v(" -q ")]),s._v("产生出指定范围的 ID 列表，然后送给另一个 "),e("code",[s._v("docker")]),s._v(" 命令作为参数，从而针对这组实体成批的进行某种操作的做法在 Docker 命令行使用过程中非常常见，不仅仅是镜像，将来我们会在各个命令中看到这类搭配以完成很强大的功能。因此每次在文档看到过滤器后，可以多注意一下它们的用法。")]),s._v(" "),e("p",[s._v("另外一些时候，我们可能只是对表格的结构不满意，希望自己组织列；或者不希望有标题，这样方便其它程序解析结果等，这就用到了 Go 的模板语法。")]),s._v(" "),e("p",[s._v("比如，下面的命令会直接列出镜像结果，并且只包含镜像ID和仓库名：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ docker image "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{{.ID}}: {{.Repository}}"')]),s._v("\n5f515359c7f8: redis\n05a60462f8ba: nginx\nfe9198c04d62: mongo\n00285df0df87: "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nf753707788c5: ubuntu\nf753707788c5: ubuntu\n1e0c3dd64ccd: ubuntu\n\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("或者打算以表格等距显示，并且有标题行，和默认一样，不过自己定义列：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ docker image "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"table {{.ID}}'),e("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v("{{.Repository}}"),e("span",{pre:!0,attrs:{class:"token entity",title:"\\t"}},[s._v("\\t")]),s._v('{{.Tag}}"')]),s._v("\nIMAGE ID            REPOSITORY          TAG\n5f515359c7f8        redis               latest\n05a60462f8ba        nginx               latest\nfe9198c04d62        mongo               "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.2")]),s._v("\n00285df0df87        "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("              "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("none"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\nf753707788c5        ubuntu              "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("16.04")]),s._v("\nf753707788c5        ubuntu              latest\n1e0c3dd64ccd        ubuntu              "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("14.04")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])])])},[],!1,null,null,null);a.default=t.exports}}]);