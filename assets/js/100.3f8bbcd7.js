(window.webpackJsonp=window.webpackJsonp||[]).push([[100],{373:function(s,t,e){"use strict";e.r(t);var a=e(10),n=Object(a.a)({},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"什么是-docker-compose"}},[s._v("什么是 Docker Compose")]),s._v(" "),e("p",[s._v("Docker Compose 是 Docker 官方编排（Orchestration）项目之一，负责快速的部署分布式应用。")]),s._v(" "),e("h2",{attrs:{id:"docker-compose-简介"}},[s._v("Docker Compose 简介")]),s._v(" "),e("p",[e("code",[s._v("Compose")]),s._v(" 项目是 "),e("code",[s._v("Docker ")]),s._v("官方的开源项目，负责实现对 "),e("code",[s._v("Docker")]),s._v(" 容器集群的快速编排。从功能上看，跟 OpenStack 中的 Heat 十分类似。")]),s._v(" "),e("p",[s._v("其代码目前在 "),e("code",[s._v("https://github.com/docker/compose")]),s._v(" 上开源。")]),s._v(" "),e("p",[s._v("Compose 定位是 「定义和运行多个 Docker 容器的应用（Defining and running multi-container Docker applications）」，其前身是开源项目 Fig。")]),s._v(" "),e("p",[s._v("通过第一部分中的介绍，我们知道使用一个 Dockerfile 模板文件，可以让用户很方便的定义一个单独的应用容器。然而，在日常工作中，经常会碰到需要多个容器相互配合来完成某项任务的情况。例如要实现一个 Web 项目，除了 Web 服务容器本身，往往还需要再加上后端的数据库服务容器，甚至还包括负载均衡容器等。")]),s._v(" "),e("p",[s._v("Compose 恰好满足了这样的需求。它允许用户通过一个单独的 docker-compose.yml 模板文件（YAML 格式）来定义一组相关联的应用容器为一个项目（project）。")]),s._v(" "),e("p",[s._v("Compose 中有两个重要的概念：")]),s._v(" "),e("p",[s._v("服务 (service)：一个应用的容器，实际上可以包括若干运行相同镜像的容器实例。\n项目 (project)：由一组关联的应用容器组成的一个完整业务单元，在 docker-compose.yml 文件中定义。\nCompose 的默认管理对象是项目，通过子命令对项目中的一组容器进行便捷地生命周期管理。")]),s._v(" "),e("p",[s._v("Compose 项目由 Python 编写，实现上调用了 Docker 服务提供的 API 来对容器进行管理。因此，只要所操作的平台支持 Docker API，就可以在其上利用 Compose 来进行编排管理。")]),s._v(" "),e("h2",{attrs:{id:"docker-compose-安装与卸载"}},[s._v("Docker Compose 安装与卸载")]),s._v(" "),e("p",[s._v("Compose 支持 Linux、macOS、Windows 10 三大平台。")]),s._v(" "),e("p",[s._v("Compose 可以通过 Python 的包管理工具 pip 进行安装，也可以直接下载编译好的二进制文件使用，甚至能够直接在 Docker 容器中运行。")]),s._v(" "),e("p",[s._v("前两种方式是传统方式，适合本地环境下安装使用；最后一种方式则不破坏系统环境，更适合云计算场景。")]),s._v(" "),e("p",[s._v("Docker for Mac 、Docker for Windows 自带 docker-compose 二进制文件，安装 Docker 之后可以直接使用。")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ docker-compose --version\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("docker-compose version 1.17.1, build 6d101fb\nLinux 系统请使用以下介绍的方法安装。")]),s._v(" "),e("h3",{attrs:{id:"二进制包"}},[s._v("二进制包")]),s._v(" "),e("p",[s._v("在 Linux 上的也安装十分简单，从 [官方GitHub Release] (https://github.com/docker/compose/releases) 处直接下载编译好的二进制文件即可。")]),s._v(" "),e("p",[s._v("例如，在 Linux 64 位系统上直接下载对应的二进制包。")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L https://github.com/docker/compose/releases/download/1.24.1/docker-compose-"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -s"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("-"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("uname")]),s._v(" -m"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /usr/local/bin/docker-compose\n$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("chmod")]),s._v(" +x /usr/local/bin/docker-compose\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"pip-安装"}},[s._v("PIP 安装")]),s._v(" "),e("p",[s._v("注： x86_64 架构的 Linux 建议按照上边的方法下载二进制包进行安装，如果您计算机的架构是 ARM (例如，树莓派)，再使用 pip 安装。")]),s._v(" "),e("p",[s._v("这种方式是将 Compose 当作一个 Python 应用来从 pip 源中安装。")]),s._v(" "),e("p",[s._v("执行安装命令：")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" pip "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -U docker-compose\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("可以看到类似如下输出，说明安装成功。")]),s._v(" "),e("p",[s._v("Collecting docker-compose\nDownloading docker-compose-1.17.1.tar.gz (149kB): 149kB downloaded\n...\nSuccessfully installed docker-compose cached-property requests texttable websocket-client docker-py dockerpty six enum34 backports.ssl-match-hostname ipaddress")]),s._v(" "),e("h3",{attrs:{id:"bash-补全命令"}},[s._v("bash 补全命令")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L https://raw.githubusercontent.com/docker/compose/1.8.0/contrib/completion/bash/docker-compose "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/bash_completion.d/docker-compose\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"容器中执行"}},[s._v("容器中执行")]),s._v(" "),e("p",[s._v("Compose 既然是一个 Python 应用，自然也可以直接用容器来执行它。")]),s._v(" "),e("p",[e("code",[s._v("$ curl -L https://github.com/docker/compose/releases/download/1.8.0/run.sh > /usr/local/bin/docker-compose")]),s._v(" "),e("code",[s._v("$ chmod +x /usr/local/bin/docker-compose")]),s._v("\n实际上，查看下载的 run.sh 脚本内容，如下")]),s._v(" "),e("p",[s._v("set -e")]),s._v(" "),e("p",[s._v('VERSION="1.8.0"\nIMAGE="docker/compose:$VERSION"')]),s._v(" "),e("h3",{attrs:{id:"setup-options-for-connecting-to-docker-host"}},[s._v("Setup options for connecting to docker host")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -z "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$DOCKER_HOST")]),s._v('"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DOCKER_HOST")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/var/run/docker.sock"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -S "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$DOCKER_HOST")]),s._v('"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DOCKER_ADDR")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-v '),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$DOCKER_HOST")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$DOCKER_HOST")]),s._v(' -e DOCKER_HOST"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DOCKER_ADDR")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-e DOCKER_HOST -e DOCKER_TLS_VERIFY -e DOCKER_CERT_PATH"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h3",{attrs:{id:"setup-volume-mounts-for-compose-config-and-context"}},[s._v("Setup volume mounts for compose config and context")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("VOLUMES")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-v '),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(":"),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$COMPOSE_FILE")]),s._v('"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("compose_dir")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("dirname")]),s._v(" $COMPOSE_FILE"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h3",{attrs:{id:"todo-also-check-file-argument"}},[s._v("TODO: also check --file argument")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$compose_dir")]),s._v('"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("VOLUMES")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$VOLUMES")]),s._v(" -v "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$compose_dir")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$compose_dir")]),s._v('"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v('"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("VOLUMES")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$VOLUMES")]),s._v(" -v "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v(":"),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v(" -v "),e("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v(':/root"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mount $HOME in /root to share docker.config")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h3",{attrs:{id:"only-allocate-tty-if-we-detect-one"}},[s._v("Only allocate tty if we detect one")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -t "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DOCKER_RUN_OPTIONS")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-t"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -t "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("DOCKER_RUN_OPTIONS")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$DOCKER_RUN_OPTIONS")]),s._v(' -i"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" docker run --rm "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$DOCKER_RUN_OPTIONS")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$DOCKER_ADDR")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$COMPOSE_OPTIONS")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$VOLUMES")]),s._v(" -w "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("pwd")]),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v('"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$IMAGE")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),e("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v('"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[s._v("可以看到，它其实是下载了 docker/compose 镜像并运行。")]),s._v(" "),e("h3",{attrs:{id:"卸载"}},[s._v("卸载")]),s._v(" "),e("p",[s._v("如果是二进制包方式安装的，删除二进制文件即可。")]),s._v(" "),e("p",[e("code",[s._v("$ sudo rm /usr/local/bin/docker-compose")]),s._v("\n如果是通过 pip 安装的，则执行如下命令即可删除。")]),s._v(" "),e("p",[e("code",[s._v("$ sudo pip uninstall docker-compose")])]),s._v(" "),e("h2",{attrs:{id:"docker-compose-使用"}},[s._v("Docker Compose 使用")]),s._v(" "),e("h3",{attrs:{id:"术语"}},[s._v("术语")]),s._v(" "),e("p",[s._v("首先介绍几个术语。")]),s._v(" "),e("p",[s._v("服务 (service)：一个应用容器，实际上可以运行多个相同镜像的实例。\n项目 (project)：由一组关联的应用容器组成的一个完整业务单元。\n可见，一个项目可以由多个服务（容器）关联而成，Compose 面向项目进行管理。")]),s._v(" "),e("h3",{attrs:{id:"场景"}},[s._v("场景")]),s._v(" "),e("p",[s._v("最常见的项目是 web 网站，该项目应该包含 web 应用和缓存。")]),s._v(" "),e("p",[s._v("下面我们用 Python 来建立一个能够记录页面访问次数的 web 网站。")]),s._v(" "),e("h3",{attrs:{id:"web-应用"}},[s._v("web 应用")]),s._v(" "),e("p",[s._v("新建文件夹，在该目录中编写 app.py 文件")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("from flask "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" Flask\n   from redis "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" Redis\n   \n   app "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Flask"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__name__"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   redis "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Redis"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("host"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'redis'")]),s._v(", "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("port")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   \n   @app.route"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   def hello"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":\n       count "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" redis.incr"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hits'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n       "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("return")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello World! 该页面已被访问 {} 次。"),e("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[s._v("\\n")]),s._v("'")]),s._v(".format"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("count"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n   \n   "),e("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" __name__ "),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"__main__"')]),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v("\n       app.run"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("host"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.0.0.0"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("debug")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("True"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("h3",{attrs:{id:"dockerfile"}},[s._v("Dockerfile")]),s._v(" "),e("p",[s._v("编写 Dockerfile 文件，内容为")]),s._v(" "),e("p",[e("code",[s._v(" FROM python:3.6-alpine")]),s._v(" "),e("code",[s._v("ADD . /code")]),s._v(" "),e("code",[s._v("WORKDIR /code")]),s._v(" "),e("code",[s._v("RUN pip install redis flask")]),s._v(" "),e("code",[s._v('CMD ["python", "app.py"]')]),s._v(" "),e("code",[s._v("### docker-compose.yml")]),s._v("\n编写 docker-compose.yml 文件，这个是 Compose 使用的主模板文件。")]),s._v(" "),e("p",[s._v("version: '3'\nservices:")]),s._v(" "),e("pre",[e("code",[s._v(' web:\n   build: .\n   ports:\n    - "5000:5000"\n    \n redis:\n   image: "redis:alpine"\n')])]),s._v(" "),e("h3",{attrs:{id:"运行-compose-项目"}},[s._v("运行 compose 项目")]),s._v(" "),e("p",[s._v("$ docker-compose up\n此时访问本地 5000 端口，每次刷新页面，计数就会加 1。")]),s._v(" "),e("h2",{attrs:{id:"docker-compose-命令说明"}},[s._v("Docker Compose 命令说明")]),s._v(" "),e("h3",{attrs:{id:"命令对象与格式"}},[s._v("命令对象与格式")]),s._v(" "),e("p",[s._v("对于 Compose 来说，大部分命令的对象既可以是项目本身，也可以指定为项目中的服务或者容器。如果没有特别的说明，命令对象将是项目，这意味着项目中所有的服务都会受到命令影响。")]),s._v(" "),e("p",[s._v("执行 "),e("code",[s._v("docker-compose [COMMAND] --help")]),s._v(" 或者"),e("code",[s._v(" docker-compose help [COMMAND]")]),s._v(" 可以查看具体某个命令的使用格式。")]),s._v(" "),e("p",[e("code",[s._v("docker-compose")]),s._v(" 命令的基本的使用格式是")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[s._v("docker-compose "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("-f"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("arg"),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("options"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("COMMAND"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ARGS"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"命令选项"}},[s._v("命令选项")]),s._v(" "),e("p",[e("code",[s._v("-f, --file FILE")]),s._v(" 指定使用的 Compose 模板文件，默认为 docker-compose.yml，可以多次指定。\n"),e("code",[s._v("-p, --project-name NAME")]),s._v(" 指定项目名称，默认将使用所在目录名称作为项目名。\n"),e("code",[s._v("--x-networking ")]),s._v("使用 Docker 的可拔插网络后端特性\n"),e("code",[s._v("--x-network-driver DRIVER ")]),s._v(" 指定网络后端的驱动，默认为 bridge\n"),e("code",[s._v("--verbose")]),s._v(" 输出更多调试信息。\n"),e("code",[s._v("-v, --version")]),s._v(" 打印版本并退出。")]),s._v(" "),e("h3",{attrs:{id:"命令使用说明"}},[s._v("命令使用说明")]),s._v(" "),e("h4",{attrs:{id:"build"}},[s._v("build")]),s._v(" "),e("p",[s._v("格式为 "),e("code",[s._v("docker-compose build [options] [SERVICE...]")])]),s._v(" "),e("p",[s._v("构建（重新构建）项目中的服务容器。")]),s._v(" "),e("p",[s._v("服务容器一旦构建后，将会带上一个标记名，例如对于 web 项目中的一个 db 容器，可能是 web_db。")]),s._v(" "),e("p",[s._v("可以随时在项目目录下运行 docker-compose build 来重新构建服务。")]),s._v(" "),e("p",[s._v("选项包括：")]),s._v(" "),e("p",[s._v("--force-rm 删除构建过程中的临时容器。\n--no-cache 构建镜像过程中不使用 cache（这将加长构建过程）。\n--pull 始终尝试通过 pull 来获取更新版本的镜像。")]),s._v(" "),e("h4",{attrs:{id:"config"}},[s._v("config")]),s._v(" "),e("p",[s._v("验证 Compose 文件格式是否正确，若正确则显示配置，若格式错误显示错误原因。")]),s._v(" "),e("h4",{attrs:{id:"down"}},[s._v("down")]),s._v(" "),e("p",[s._v("此命令将会停止 up 命令所启动的容器，并移除网络")]),s._v(" "),e("h4",{attrs:{id:"exec"}},[s._v("exec")]),s._v(" "),e("p",[s._v("进入指定的容器。")]),s._v(" "),e("h4",{attrs:{id:"help"}},[s._v("help")]),s._v(" "),e("p",[s._v("获得一个命令的帮助。")]),s._v(" "),e("h4",{attrs:{id:"images"}},[s._v("images")]),s._v(" "),e("p",[s._v("列出 "),e("code",[s._v("Compose")]),s._v(" 文件中包含的镜像。")]),s._v(" "),e("h4",{attrs:{id:"kill"}},[s._v("kill")]),s._v(" "),e("p",[s._v("格式为 "),e("code",[s._v("docker-compose kill [options] [SERVICE...]")])]),s._v(" "),e("p",[s._v("通过发送 "),e("code",[s._v("SIGKILL")]),s._v(" 信号来强制停止服务容器。")]),s._v(" "),e("p",[s._v("支持通过 -s 参数来指定发送的信号，例如通过如下指令发送 SIGINT 信号。")]),s._v(" "),e("p",[e("code",[s._v(" $ docker-compose kill -s SIGINT")])]),s._v(" "),e("h3",{attrs:{id:"logs"}},[s._v("logs")]),s._v(" "),e("p",[s._v("格式为"),e("code",[s._v(" docker-compose logs [options] [SERVICE...]")])]),s._v(" "),e("p",[s._v("查看服务容器的输出。默认情况下，docker-compose 将对不同的服务输出使用不同的颜色来区分。可以通过 --no-color 来关闭颜色。")]),s._v(" "),e("p",[s._v("该命令在调试问题的时候十分有用。")]),s._v(" "),e("h4",{attrs:{id:"pause"}},[s._v("pause")]),s._v(" "),e("p",[s._v("格式为 "),e("code",[s._v("docker-compose pause [SERVICE...]")])]),s._v(" "),e("p",[s._v("暂停一个服务容器。")]),s._v(" "),e("h4",{attrs:{id:"port"}},[s._v("port")]),s._v(" "),e("p",[s._v("格式为  "),e("code",[s._v("docker-compose port [options] SERVICE PRIVATE_PORT")])]),s._v(" "),e("p",[s._v("打印某个容器端口所映射的公共端口。")]),s._v(" "),e("p",[s._v("选项：")]),s._v(" "),e("p",[e("code",[s._v("--protocol=proto")]),s._v(" 指定端口协议，tcp（默认值）或者 udp。\n"),e("code",[s._v("--index=index")]),s._v(" 如果同一服务存在多个容器，指定命令对象容器的序号（默认为 1）。")]),s._v(" "),e("h4",{attrs:{id:"ps"}},[s._v("ps")]),s._v(" "),e("p",[s._v("格式为"),e("code",[s._v("docker-compose ps [options] [SERVICE...]")]),s._v("。")]),s._v(" "),e("p",[s._v("列出项目中目前的所有容器。")]),s._v(" "),e("p",[s._v("选项：")]),s._v(" "),e("p",[e("code",[s._v("-q ")]),s._v("只打印容器的 ID 信息。")]),s._v(" "),e("h4",{attrs:{id:"pull"}},[s._v("pull")]),s._v(" "),e("p",[s._v("格式为 "),e("code",[s._v("docker-compose pull [options] [SERVICE...]")]),s._v("。")]),s._v(" "),e("p",[s._v("拉取服务依赖的镜像。")]),s._v(" "),e("p",[s._v("选项：")]),s._v(" "),e("p",[e("code",[s._v("--ignore-pull-failures")]),s._v(" 忽略拉取镜像过程中的错误。")]),s._v(" "),e("h4",{attrs:{id:"push"}},[s._v("push")]),s._v(" "),e("p",[s._v("推送服务依赖的镜像到 Docker 镜像仓库。")]),s._v(" "),e("h4",{attrs:{id:"restart"}},[s._v("restart")]),s._v(" "),e("p",[s._v("格式为 "),e("code",[s._v("docker-compose restart [options] [SERVICE...]")]),s._v("。")]),s._v(" "),e("p",[s._v("重启项目中的服务。")]),s._v(" "),e("p",[s._v("选项：")]),s._v(" "),e("p",[e("code",[s._v("-t, --timeout TIMEOUT")]),s._v(" 指定重启前停止容器的超时（默认为 10 秒）。")]),s._v(" "),e("h4",{attrs:{id:"rm"}},[s._v("rm")]),s._v(" "),e("p",[s._v("格式为 "),e("code",[s._v("docker-compose rm [options] [SERVICE...]")]),s._v("。")]),s._v(" "),e("p",[s._v("删除所有（停止状态的）服务容器。推荐先执行 docker-compose stop 命令来停止容器。")]),s._v(" "),e("p",[s._v("选项：")]),s._v(" "),e("p",[s._v("-f, --force 强制直接删除，包括非停止状态的容器。一般尽量不要使用该选项。\n-v 删除容器所挂载的数据卷。")]),s._v(" "),e("h4",{attrs:{id:"run"}},[s._v("run")]),s._v(" "),e("p",[s._v("格式为 "),e("code",[s._v("docker-compose run [options] [-p PORT...] [-e KEY=VAL...] SERVICE [COMMAND] [ARGS...]")]),s._v("。")]),s._v(" "),e("p",[s._v("在指定服务上执行一个命令。")]),s._v(" "),e("p",[s._v("例如：")]),s._v(" "),e("p",[s._v("$ docker-compose run ubuntu ping docker.com\n将会启动一个 ubuntu 服务容器，并执行 ping docker.com 命令。")]),s._v(" "),e("p",[s._v("默认情况下，如果存在关联，则所有关联的服务将会自动被启动，除非这些服务已经在运行中。")]),s._v(" "),e("p",[s._v("该命令类似启动容器后运行指定的命令，相关卷、链接等等都将会按照配置自动创建。")]),s._v(" "),e("p",[s._v("两个不同点：")]),s._v(" "),e("p",[s._v("给定命令将会覆盖原有的自动运行命令；\n不会自动创建端口，以避免冲突。\n如果不希望自动启动关联的容器，可以使用 --no-deps 选项，例如")]),s._v(" "),e("p",[s._v("$ docker-compose run --no-deps web python manage.py shell\n将不会启动 web 容器所关联的其它容器。")]),s._v(" "),e("p",[s._v("选项：")]),s._v(" "),e("p",[s._v('-d 后台运行容器。\n--name NAME 为容器指定一个名字。\n--entrypoint CMD 覆盖默认的容器启动指令。\n-e KEY=VAL 设置环境变量值，可多次使用选项来设置多个环境变量。\n-u, --user="" 指定运行容器的用户名或者 uid。\n--no-deps 不自动启动关联的服务容器。\n--rm 运行命令后自动删除容器，d 模式下将忽略。\n-p, --publish=[] 映射容器端口到本地主机。\n--service-ports 配置服务端口并映射到本地主机。\n-T 不分配伪 tty，意味着依赖 tty 的指令将无法运行。')]),s._v(" "),e("h4",{attrs:{id:"scale"}},[s._v("scale")]),s._v(" "),e("p",[s._v("格式为 "),e("code",[s._v("docker-compose scale [options] [SERVICE=NUM...]")]),s._v("。")]),s._v(" "),e("p",[s._v("设置指定服务运行的容器个数。")]),s._v(" "),e("p",[s._v("通过 "),e("code",[s._v("service=num")]),s._v(" 的参数来设置数量。例如：")]),s._v(" "),e("p",[e("code",[s._v("$ docker-compose scale web=3 db=2")]),s._v("\n将启动 3 个容器运行 web 服务，2 个容器运行 db 服务。")]),s._v(" "),e("p",[s._v("一般的，当指定数目多于该服务当前实际运行容器，将新创建并启动容器；反之，将停止容器。")]),s._v(" "),e("p",[s._v("选项：")]),s._v(" "),e("p",[s._v("-t, --timeout TIMEOUT 停止容器时候的超时（默认为 10 秒）。")]),s._v(" "),e("h4",{attrs:{id:"start"}},[s._v("start")]),s._v(" "),e("p",[s._v("格式为 "),e("code",[s._v("docker-compose start [SERVICE...]")]),s._v("。")]),s._v(" "),e("p",[s._v("启动已经存在的服务容器。")]),s._v(" "),e("h4",{attrs:{id:"stop"}},[s._v("stop")]),s._v(" "),e("p",[s._v("格式为 "),e("code",[s._v("docker-compose stop [options] [SERVICE...]")]),s._v("。")]),s._v(" "),e("p",[s._v("停止已经处于运行状态的容器，但不删除它。通过 docker-compose start 可以再次启动这些容器。")]),s._v(" "),e("p",[s._v("选项：")]),s._v(" "),e("p",[e("code",[s._v("-t, --timeout TIMEOUT")]),s._v(" 停止容器时候的超时（默认为 10 秒）。")]),s._v(" "),e("h4",{attrs:{id:"top"}},[s._v("top")]),s._v(" "),e("p",[s._v("查看各个服务容器内运行的进程。")]),s._v(" "),e("h4",{attrs:{id:"unpause"}},[s._v("unpause")]),s._v(" "),e("p",[s._v("格式为 "),e("code",[s._v("docker-compose unpause [SERVICE...]")]),s._v("。")]),s._v(" "),e("p",[s._v("恢复处于暂停状态中的服务。")]),s._v(" "),e("h4",{attrs:{id:"up"}},[s._v("up")]),s._v(" "),e("p",[s._v("格式为"),e("code",[s._v(" docker-compose up [options] [SERVICE...]")]),s._v("。")]),s._v(" "),e("p",[s._v("该命令十分强大，它将尝试自动完成包括构建镜像，（重新）创建服务，启动服务，并关联服务相关容器的一系列操作。")]),s._v(" "),e("p",[s._v("链接的服务都将会被自动启动，除非已经处于运行状态。")]),s._v(" "),e("p",[s._v("可以说，大部分时候都可以直接通过该命令来启动一个项目。")]),s._v(" "),e("p",[s._v("默认情况，docker-compose up 启动的容器都在前台，控制台将会同时打印所有容器的输出信息，可以很方便进行调试。")]),s._v(" "),e("p",[s._v("当通过 "),e("code",[s._v("Ctrl-C ")]),s._v("停止命令时，所有容器将会停止。")]),s._v(" "),e("p",[s._v("如果使用"),e("code",[s._v(" docker-compose up -d")]),s._v("，将会在后台启动并运行所有的容器。一般推荐生产环境下使用该选项。")]),s._v(" "),e("p",[s._v("默认情况，如果服务容器已经存在，docker-compose up 将会尝试停止容器，然后重新创建（保持使用 volumes-from 挂载的卷），以保证新启动的服务匹配 docker-compose.yml 文件的最新内容。如果用户不希望容器被停止并重新创建，可以使用 docker-compose up --no-recreate。这样将只会启动处于停止状态的容器，而忽略已经运行的服务。如果用户只想重新部署某个服务，可以使用 docker-compose up --no-deps -d <SERVICE_NAME> 来重新创建服务并后台停止旧服务，启动新服务，并不会影响到其所依赖的服务。")]),s._v(" "),e("p",[s._v("选项：")]),s._v(" "),e("p",[s._v("-d 在后台运行服务容器。\n"),e("code",[s._v("--no-color")]),s._v(" 不使用颜色来区分不同的服务的控制台输出。\n"),e("code",[s._v("--no-deps")]),s._v(" 不启动服务所链接的容器。\n"),e("code",[s._v("--force-recreate")]),s._v(" 强制重新创建容器，不能与 --no-recreate 同时使用。\n"),e("code",[s._v("--no-recreate")]),s._v(" 如果容器已经存在了，则不重新创建，不能与 --force-recreate 同时使用。\n"),e("code",[s._v("--no-build")]),s._v(" 不自动构建缺失的服务镜像。\n"),e("code",[s._v("-t, --timeout TIMEOUT ")]),s._v("停止容器时候的超时（默认为 10 秒）。")]),s._v(" "),e("h4",{attrs:{id:"version"}},[s._v("version")]),s._v(" "),e("p",[s._v("格式为 "),e("code",[s._v("docker-compose version")]),s._v("。")]),s._v(" "),e("p",[s._v("打印版本信息")])])},[],!1,null,null,null);t.default=n.exports}}]);