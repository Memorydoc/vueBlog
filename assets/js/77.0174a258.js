(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{351:function(s,t,e){"use strict";e.r(t);var a=e(10),i=Object(a.a)({},function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"mysql-训练营（一）"}},[s._v("Mysql 训练营（一）")]),s._v(" "),e("h3",{attrs:{id:"mysql默认的连接超时时间"}},[s._v("mysql默认的连接超时时间")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("SHOW GLOBAL VARIABLES LIKE 'wait_timeout'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"最大连接数"}},[s._v("最大连接数")]),s._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[s._v("show variables  like "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'max_connections'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"mysql-sql执行过程"}},[s._v("Mysql sql执行过程")]),s._v(" "),e("p",[s._v("client -> query_cache -> paser (解析器)-> pre  processor （预处理器）-> optimizer （优化器）")]),s._v(" "),e("p",[s._v("-> execution plans（执行计划） -> 执行器 （运用执行计划，调用存储引擎api，进行数据交互）")]),s._v(" "),e("p",[s._v("-> 存储引擎")]),s._v(" "),e("p",[e("img",{attrs:{src:"/img/mysql/image-20200801230542552.png",alt:"image-20200801230542552"}})]),s._v(" "),e("p",[e("img",{attrs:{src:"/img/mysql/image-20200801230613424.png",alt:"image-20200801230613424"}})]),s._v(" "),e("h3",{attrs:{id:"一条update（增删改）-在mysql服务端经历了什么？"}},[s._v("一条update（增删改） 在mysql服务端经历了什么？")]),s._v(" "),e("p",[s._v("先从存储引擎中拿到要修改的数据，在执行器中按照sql进行处理数据，处理完成数据之后，在将数据写回到磁盘（这时，就会记录 redo log  和undo log）")]),s._v(" "),e("h3",{attrs:{id:"存储引擎和磁盘-进行交互"}},[s._v("存储引擎和磁盘 进行交互")]),s._v(" "),e("p",[e("img",{attrs:{src:"/img/mysql/image-20200801231758408.png",alt:"image-20200801231758408"}})]),s._v(" "),e("p",[s._v("BufferPool  写redo log 的时候，是顺序写入的， 但是写入Disk 中的数据是随机写入的")]),s._v(" "),e("h3",{attrs:{id:"undo-log"}},[s._v("undo log")]),s._v(" "),e("p",[s._v("事物回滚需要使用的日志是undo log")]),s._v(" "),e("h3",{attrs:{id:"binlog-日志（在server端）"}},[s._v("binlog  日志（在server端）")]),s._v(" "),e("p",[s._v("mysql主从数据库的时候，会用到该日志， slave 会订阅binlog日志（记录了 master 中DDL  和 DML语句）")]),s._v(" "),e("ul",[e("li",[s._v("记录DDL  和DML 语句")]),s._v(" "),e("li")]),s._v(" "),e("p",[e("img",{attrs:{src:"/img/mysql/image-20200801234730813.png",alt:"image-20200801234730813"}})]),s._v(" "),e("h3",{attrs:{id:"update-语句整体执行流程"}},[s._v("update 语句整体执行流程")]),s._v(" "),e("p",[e("img",{attrs:{src:"/img/mysql/image-20200801235047430.png",alt:"image-20200801235047430"}})]),s._v(" "),e("h2",{attrs:{id:"exists-和-in-区别"}},[s._v("Exists 和 In 区别")]),s._v(" "),e("p",[s._v("select * from A where id in ( select id from B)")]),s._v(" "),e("ul",[e("li",[s._v("In 会将 select id from B 中的数据加载到 "),e("strong",[s._v("缓存")]),s._v(" 中， 如果进行判断时，如果B的数据小， 会大大提高查询效率， 而且 减少内存消耗")])]),s._v(" "),e("p",[s._v("select * from A where exists (select 1 from B where B.id = A.id )")]),s._v(" "),e("ul",[e("li",[s._v("exists 是会执行 A.lenth 次 "),e("strong",[s._v("查询数据库")]),s._v("，进行 子查询中数据的比对，如果A越小，那么效率会越高")])]),s._v(" "),e("p",[s._v("总结为： In 小表    Exist 大表（B这个时候 要比A 大，这样A就是小表，那么A.lenth就小，那么查询效率就高）")])])},[],!1,null,null,null);t.default=i.exports}}]);